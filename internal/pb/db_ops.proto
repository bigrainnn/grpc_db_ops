syntax = "proto3";
package db_common_ops;
option go_package="grpc_db_ops/proto/pb;db_ops_pb";
message Field
{
  string key = 1;
  string value = 2;
}

message QueryRecord // 查询返回的记录
{
  repeated string value = 1;
}

message Record  // 表示一条记录
{
  repeated Field fields = 1;
}

enum InsertMode
{
  COMMON = 0;
  ON_DUPLICATE_KEY_UPDATE = 1;
  REPLACE = 2;
}

message InsertReq
{
  string business_id = 1;      // 用于指定库表
  repeated Record records = 2;
  InsertMode mode = 3;
}

message UpdateItem
{
  repeated Field update_fields = 1;
  repeated Field where_fields = 2;
}

message UpdateReq
{
  string business_id = 1;
  repeated UpdateItem items = 2;
}

message DeleteReq
{
  string business_id = 1;
  repeated Field where_fields = 2;
}

message DeleteRes
{
  string err_msg = 1;   // 失败信息
  uint32 err_code = 2;  // 错误码
}

// ColumnSort
//   string column_name =1; 需要排序的字段
//   bool desc = 2;     desc降序 填 true
message ColumnSort
{
  string column_name = 1;
  bool desc = 2;
}

// WhereStruct
//   string expression= 1; 表达式，如"(A=? AND B=?) OR (C=? AND D=?)"
//   repeated string immediate = 2; 立即数，如[]string{"1", "2", "3", "4",}
//                                  注意，如需要使用'IN'，请将表达式设为"A IN (?,?,?)"，
//                                  这时立即数为[]string{"1", "2", "3",}
message WhereStruct
{
  string expression = 1;
  repeated string immediate = 2;
}

message GetRecordReq
{
  string business_id = 1;
  uint32 pos = 2;           // 当前查询位置, 初始为0
  uint32 limit = 3;         // 每页记录数
  repeated string query_fields = 4;  // 需要查询的字段（不填返回所有字段）
  WhereStruct where_condition = 5; // where语句
  repeated ColumnSort sorts = 6;     // 排序字段
}

message GetRecordRes
{
  string err_msg = 1;            // 失败信息
  uint32 err_code = 2;           // 错误码
  uint64 nums = 3;               // 总数
  repeated string query_fields = 4;       // 查询的字段
  repeated QueryRecord records = 5;       // 返回的具体记录
}

// 全部成功或全部失败
message Res
{
  string err_msg = 1;   // 失败信息
  uint32 err_code = 2;  // 错误码
}

service DbOpsService {
  rpc Insert (InsertReq) returns (Res);
  rpc Update (UpdateReq) returns (Res);
  rpc Delete (DeleteReq) returns (Res);
  rpc GetRecord (GetRecordReq) returns (GetRecordRes);
}